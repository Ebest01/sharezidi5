<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ShareZidi Test</title>
    <script crossorigin src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <script crossorigin src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
</head>
<body>
    <div id="root"></div>

    <script type="text/babel">
        const { useState } = React;

        function App() {
            const [users, setUsers] = useState([]);
            const [loading, setLoading] = useState(false);

            const addUser = async () => {
                setLoading(true);
                try {
                    const email = `user${Date.now()}@test.com`;
                    const response = await fetch('/api/register', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ 
                            email, 
                            password: 'test123',
                            username: email.split('@')[0]
                        })
                    });
                    
                    const result = await response.json();
                    console.log('Registration result:', result);
                    
                    if (result.success) {
                        await fetchUsers();
                    }
                } catch (error) {
                    console.error('Error:', error);
                } finally {
                    setLoading(false);
                }
            };

            const fetchUsers = async () => {
                try {
                    const response = await fetch('/api/users');
                    const result = await response.json();
                    
                    if (result.success) {
                        setUsers(result.users);
                    }
                } catch (error) {
                    console.error('Error fetching users:', error);
                }
            };

            React.useEffect(() => {
                fetchUsers();
            }, []);

            return (
                <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>
                    <h1>ShareZidi Database Test</h1>
                    
                    <div style={{ marginBottom: '20px' }}>
                        <button 
                            onClick={addUser}
                            disabled={loading}
                            style={{
                                padding: '10px 20px',
                                fontSize: '16px',
                                backgroundColor: '#007bff',
                                color: 'white',
                                border: 'none',
                                borderRadius: '5px',
                                cursor: loading ? 'not-allowed' : 'pointer'
                            }}
                        >
                            {loading ? 'Adding...' : 'Add Random User'}
                        </button>
                    </div>

                    <div>
                        <h3>Users ({users.length}):</h3>
                        {users.length === 0 ? (
                            <p>No users found. Click "Add Random User" to create one.</p>
                        ) : (
                            <ul>
                                {users.map((user, index) => (
                                    <li key={user._id || index} style={{ marginBottom: '10px' }}>
                                        <strong>{user.email}</strong> - {user.username} 
                                        <br />
                                        <small>Created: {new Date(user.createdAt).toLocaleString()}</small>
                                    </li>
                                ))}
                            </ul>
                        )}
                    </div>
                </div>
            );
        }

        const root = ReactDOM.createRoot(document.getElementById('root'));
        root.render(<App />);
    </script>
</body>
</html>